<?xml version="1.0" encoding="UTF-8" ?>
<!-- xmlns 作用类似java的package -->
<!-- xmlns:xsi xml定义的规则-->
<!-- xmlns:tx 事务 -->
<!-- xmlns:p 简化配置方式 -->
<!-- xmlns:aop aop -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
       
	<!-- 自动代理 -->
	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
	<!-- 声明一个需要织入到虚拟切面的逻辑(切面) -->
	<!-- <bean id="LogAspect" class="com.spring.aop.aspect.LogAspect"></bean>
	
	<aop:config>
		<aop:aspect ref="LogAspect">
			切点(具体方法声明)
			<aop:pointcut expression="execution(* com.spring.aop.service..*(..))" id="logPointcut"></aop:pointcut>
			<aop:before method="before"  pointcut-ref="logPointcut"/>
			<aop:after-returning method="afterReturn" pointcut-ref="logPointcut"/>
			<aop:after method="after" pointcut-ref="logPointcut"/>
			<aop:after-throwing method="afterThrow" pointcut-ref="logPointcut"/>
		</aop:aspect>
	</aop:config> -->
	
	<!-- 
		execution配置
		execution(* com.spring.aop.service..*.*(..))
		就像定义一个方法:
			权限修饰符(public/private/protected)
			返回值(void/自定义类型) 必填
			类的地址	必填
			方法名称	必填
			参数列表	必填
			异常类型	
		如果方法被final修饰,就意味着这个方法不能被扩展(无法代理)
	 -->
</beans>




















